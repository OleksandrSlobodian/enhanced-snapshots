#!/bin/bash
#
# chkconfig: 2345 85 70
#
### BEGIN INIT INFO
# Provides: copycat
# Required-Start: $network $syslog
# Required-Stop: $network $syslog
# Default-Start:
# Default-Stop:
# Description: CopyCat
# Short-Description: start and stop CopyCat
### END INIT INFO

## Source function library.
#. /etc/rc.d/init.d/functions

APP_NAME="copycat"
APP_USER="copycat"
APP_PID="/var/run/$APP_NAME.pid"
APP_PATH="/opt/copycat"
APP_CONFIG="$APP_PATH/config.json"
APP_LIBS="$APP_PATH/cc.jar:$APP_PATH/libs/*"
APP_LOGS="/var/log/$APP_NAME"
JAVA_HOME="/usr/lib/jvm/java"
APP_PRE_OPTION="$JAVA_HOME/bin/java -cp "
APP_POST_OPTION="com.datish.copycat.Server $APP_CONFIG"

TMP_FILE="/tmp/status_$APP_NAME"
STATUS_CODE[0]="is running"
STATUS_CODE[1]="not running"
STATUS_CODE[2]="stopped incorrectly"
STATUS_CODE[9]="default status, should not be seen"

start() {
    checkpid
    STATUS=$?
    if [ $STATUS -ne 0 ] ;
    then
       echo "Starting $APP_NAME..."
       su - $APP_USER -s "/bin/sh" -c "nohup $APP_PRE_OPTION $APP_LIBS $APP_POST_OPTION &> $APP_LOGS/$APP_NAME.log < /dev/null &"
       PID=`ps -Fu $APP_USER | grep "$APP_POST_OPTION" | awk {'print $2'}`
       echo "$PID" > $APP_PID
    else
       echo "$APP_NAME already running"
    fi
}

stop() {
    checkpid
    STATUS=$?
    if [ $STATUS -eq 0 ] ;
        then
        echo "Stopping $APP_NAME..."
        kill `cat $APP_PID`
        rm $APP_PID
        statusit
    else
        echo "$APP_NAME - already killed"
    fi
}

checkpid(){
    STATUS=9
    if [ -f $APP_PID ] ;
    then
        ps -Fp `cat $APP_PID` | grep $APP_LIBS > $TMP_FILE
        if [ -f $TMP_FILE -a -s $TMP_FILE ] ;
        then
            STATUS=0
        else
            STATUS=2
        fi
	rm -f $TMP_FILE
    else
	STATUS=1
    fi
	
    return $STATUS
}

statusit() {
    checkpid 
    STATUS=$?
    EXITSTATUS=${STATUS_CODE[STATUS]}
	
    if [ $STATUS -eq 0 ] ;
    then
        EXITSTATUS=${STATUS_CODE[STATUS]}" (PID `cat $APP_PID`)"
    fi
	
    echo $APP_NAME - $EXITSTATUS
}



case "$1" in

    'start')
        start
        ;;

    'stop')
        stop
        ;;

    'restart')
        stop
        start
        ;;

    'status')
        statusit
        ;;
        
    *)
        echo "Usage: $0 { start | stop | restart | status }"
        exit 1
        ;;
esac

exit 0
